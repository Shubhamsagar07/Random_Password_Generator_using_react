import { useState,useCallback ,useEffect,useRef} from 'react'

import './App.css'

function App() {
  const[length,setLength]=useState(8)
  const[numberAllowed,setNumberAllowed]=useState(false)
  const[charAllowed,setCharAllowed]=useState(false)
  const[password,setPassword]=useState("")//callbackbelow code to declare useCallback

  const passwordRef = useRef(null)
  const generatePassword=useCallback(() =>{
    let pass = ""
    let str = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz"
    if(numberAllowed) str +="0123456789"
    if(charAllowed) str +="!@#$%^&*()_+"

    for(let i=1;i<=length;i++){  
     const char = Math.floor(Math.random() * str.length + 1)// Math.floorclaasic technique to generate number between x and y
      pass +=str.charAt(char)//char here is acting as index
    }
    setPassword(pass)//it is a method

  },[length,numberAllowed,charAllowed]) //these are dependencies array make sure optimization is done
  useEffect(()=>{
    generatePassword()
  },[length,numberAllowed,charAllowed])// if we dont include this it will go in infinite loop and generate password infinitely
  
  const copyPasswordToClipboard = () =>{
    window.navigator.clipboard.writeText(password)// it will grab text and password that is generated and copy it
    passwordRef.current?.select() //it selects the text that is generated by password generator on copying
    //passwordRef.current?.setSelectionRange(0,4) will make only 4 test to select as we have provided with the range of 4 on clicking copy
    
  }

  return (
    <>
    <div className=" w-full max-w-md mx-auto shadow-md rounded-lg px-4 py-3 my-8 bg-gray-800 text-orange-500">
  <h1 className=' text-wrap text-white text-center'>Password Generator</h1>
  
  <div className="flex shadow rounded-lg overflow-hidden mb-4">
    <input
    type='text'
    value={password}
    className='outline-none w-full py-1 px-3'
    placeholder='password'
    readOnly
    ref={passwordRef}
    
    />
    <button onClick={copyPasswordToClipboard} className=' shadow-md border-r-2 rounded-r-2xl border-2 w-12 bg-blue-800 font-bold '>copy</button>
    </div>
    <div 
    className="flex  text-sm gap-x-2">
      <div className="flex items-center gap-x-1">
        <input 
        type="range"
        min={6}
        max={100}
        value={length}
        name=""
        className='cursor-pointer'
        onChange={(e)=>setLength(e.target.value)}
         id=""
        />
        <label htmlFor="length">Length:{length}</label>

      </div>
      <div className="flex items-center gap-x-1">
        <input 
        type="checkbox"
        value={length}
        name=""
        className='cursor-pointer'
        defaultChecked={numberAllowed}
        onChange={()=>{setNumberAllowed((prev)=>!prev)}}
         id=""
        />
        <label htmlFor="number">numbers</label>

      </div>
      <div className="flex items-center gap-x-1">
        <input 
        type="checkbox"
        name=""
        className='cursor-pointer'
        defaultChecked={charAllowed}
        onChange={()=>{
          setCharAllowed((prev)=>!prev)}}
         id=""
        />
        <label htmlFor="charInput">characters</label>

      </div>
    </div>
    


  </div>
  
    </>
  )
}

export default App
